!function(root){"use strict";function Filter(options,type){this.options={},options=options||this.options;var defaults={frequency:350,peak:1};this.inputNode=this.filterNode=Pz.context.createBiquadFilter(),this.filterNode.type=type,this.outputNode=Pizzicato.context.createGain(),this.filterNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]}function buildImpulse(){var n,i,length=Pz.context.sampleRate*this.time,impulse=Pizzicato.context.createBuffer(2,length,Pz.context.sampleRate),impulseL=impulse.getChannelData(0),impulseR=impulse.getChannelData(1);for(i=0;i<length;i++)n=this.reverse?length-i:i,impulseL[i]=(2*Math.random()-1)*Math.pow(1-n/length,this.decay),impulseR[i]=(2*Math.random()-1)*Math.pow(1-n/length,this.decay);this.reverbNode.buffer=impulse}function getDistortionCurve(gain){for(var sampleRate=Pz.context.sampleRate,curve=new Float32Array(sampleRate),deg=Math.PI/180,i=0;i<sampleRate;i++){var x=2*i/sampleRate-1;curve[i]=(3+gain)*x*20*deg/(Math.PI+gain*Math.abs(x))}return curve}var Pizzicato={},Pz=Pizzicato,commonJS="object"==typeof module&&module.exports,amd="function"==typeof define&&define.amd;commonJS?module.exports=Pizzicato:amd?define([],Pizzicato):root.Pizzicato=root.Pz=Pizzicato;var AudioContext=root.AudioContext||root.webkitAudioContext;if(AudioContext){Pizzicato.context=new AudioContext;var masterGainNode=Pizzicato.context.createGain();masterGainNode.connect(Pizzicato.context.destination),Pizzicato.Util={isString:function(arg){return"[object String]"===toString.call(arg)},isObject:function(arg){return"[object Object]"===toString.call(arg)},isFunction:function(arg){return"[object Function]"===toString.call(arg)},isNumber:function(arg){return"[object Number]"===toString.call(arg)&&arg===+arg},isArray:function(arg){return"[object Array]"===toString.call(arg)},isInRange:function(arg,min,max){return!!(Pz.Util.isNumber(arg)&&Pz.Util.isNumber(min)&&Pz.Util.isNumber(max))&&(arg>=min&&arg<=max)},isBool:function(arg){return"boolean"==typeof arg},isOscillator:function(audioNode){return audioNode&&"[object OscillatorNode]"===audioNode.toString()},isAudioBufferSourceNode:function(audioNode){return audioNode&&"[object AudioBufferSourceNode]"===audioNode.toString()},isSound:function(sound){return sound instanceof Pz.Sound},isEffect:function(effect){for(var key in Pizzicato.Effects)if(effect instanceof Pizzicato.Effects[key])return!0;return!1},normalize:function(num,floor,ceil){if(Pz.Util.isNumber(num)&&Pz.Util.isNumber(floor)&&Pz.Util.isNumber(ceil))return(ceil-floor)*num/1+floor},getDryLevel:function(mix){return!Pz.Util.isNumber(mix)||mix>1||mix<0?0:mix<=.5?1:1-2*(mix-.5)},getWetLevel:function(mix){return!Pz.Util.isNumber(mix)||mix>1||mix<0?0:mix>=.5?1:1-2*(.5-mix)}};var gainNode=Pizzicato.context.createGain(),audioNode=Object.getPrototypeOf(Object.getPrototypeOf(gainNode)),connect=audioNode.connect;audioNode.connect=function(node){var endpoint=Pz.Util.isEffect(node)?node.inputNode:node;return connect.call(this,endpoint),node},Object.defineProperty(Pizzicato,"volume",{enumerable:!0,get:function(){return masterGainNode.gain.value},set:function(volume){Pz.Util.isInRange(volume,0,1)&&masterGainNode&&(masterGainNode.gain.value=volume)}}),Object.defineProperty(Pizzicato,"masterGainNode",{enumerable:!1,get:function(){return masterGainNode},set:function(volume){console.error("Can't set the master gain node")}}),Pizzicato.Events={on:function(name,callback,context){if(name&&callback){this._events=this._events||{};(this._events[name]||(this._events[name]=[])).push({callback:callback,context:context||this,handler:this})}},trigger:function(name){if(name){var _event,length,args,i;if(this._events=this._events||{},_event=this._events[name]||(this._events[name]=[])){for(length=Math.max(0,arguments.length-1),args=[],i=0;i<length;i++)args[i]=arguments[i+1];for(i=0;i<_event.length;i++)_event[i].callback.apply(_event[i].context,args)}}},off:function(name){name?this._events[name]=void 0:this._events={}}},Pizzicato.Sound=function(description,callback){function initializeWithWave(waveOptions,callback){waveOptions=waveOptions||{},this.getRawSourceNode=function(){var frequency=this.sourceNode?this.sourceNode.frequency.value:waveOptions.frequency,node=Pizzicato.context.createOscillator();return node.type=waveOptions.type||"sine",node.frequency.value=frequency||440,node},this.sourceNode=this.getRawSourceNode(),this.sourceNode.gainSuccessor=Pz.context.createGain(),this.sourceNode.connect(this.sourceNode.gainSuccessor),util.isFunction(callback)&&callback()}function initializeWithUrl(paths,callback){paths=util.isArray(paths)?paths:[paths];var request=new XMLHttpRequest;request.open("GET",paths[0],!0),request.responseType="arraybuffer",request.onload=function(progressEvent){Pizzicato.context.decodeAudioData(progressEvent.target.response,function(buffer){self.getRawSourceNode=function(){var node=Pizzicato.context.createBufferSource();return node.loop=this.loop,node.buffer=buffer,node},util.isFunction(callback)&&callback()}.bind(self),function(error){if(console.error("Error decoding audio file "+paths[0]),paths.length>1)return paths.shift(),void initializeWithUrl(paths,callback);error=error||new Error("Error decoding audio file "+paths[0]),util.isFunction(callback)&&callback(error)}.bind(self))},request.onreadystatechange=function(event){4===request.readyState&&200!==request.status&&console.error("Error while fetching "+paths[0]+". "+request.statusText)},request.send()}function initializeWithFunction(options,callback){var audioFunction=util.isFunction(options)?options:options.audioFunction,bufferSize=util.isObject(options)&&options.bufferSize?options.bufferSize:null;if(!bufferSize)try{Pizzicato.context.createScriptProcessor()}catch(e){bufferSize=2048}this.getRawSourceNode=function(){var node=Pizzicato.context.createScriptProcessor(bufferSize,1,1);return node.onaudioprocess=audioFunction,node}}var self=this,util=Pizzicato.Util,descriptionError=function(description){if(description&&!util.isFunction(description)&&!util.isString(description)&&!util.isObject(description))return"Description type not supported. Initialize a sound using an object, a function or a string.";if(util.isObject(description)){if(!util.isString(description.source)||-1===["wave","file","input","script","sound"].indexOf(description.source))return"Specified source not supported. Sources can be wave, file, input or script";if(!("file"!==description.source||description.options&&description.options.path))return"A path is needed for sounds with a file source";if(!("script"!==description.source||description.options&&description.options.audioFunction))return"An audio function is needed for sounds with a script source"}}(description),hasOptions=util.isObject(description)&&util.isObject(description.options);if(descriptionError)throw console.error(descriptionError),new Error("Error initializing Pizzicato Sound: "+descriptionError);this.detached=hasOptions&&description.options.detached,this.masterVolume=Pizzicato.context.createGain(),this.fadeNode=Pizzicato.context.createGain(),this.fadeNode.gain.value=0,this.detached||this.masterVolume.connect(Pizzicato.masterGainNode),this.lastTimePlayed=0,this.effects=[],this.effectConnectors=[],this.playing=this.paused=!1,this.loop=hasOptions&&description.options.loop,this.attack=hasOptions&&util.isNumber(description.options.attack)?description.options.attack:.04,this.volume=hasOptions&&util.isNumber(description.options.volume)?description.options.volume:1,hasOptions&&util.isNumber(description.options.release)?this.release=description.options.release:hasOptions&&util.isNumber(description.options.sustain)?(console.warn("'sustain' is deprecated. Use 'release' instead."),this.release=description.options.sustain):this.release=.04,description?util.isString(description)?initializeWithUrl.bind(this)(description,callback):util.isFunction(description)?initializeWithFunction.bind(this)(description,callback):"file"===description.source?initializeWithUrl.bind(this)(description.options.path,callback):"wave"===description.source?initializeWithWave.bind(this)(description.options,callback):"input"===description.source?function(options,callback){if(navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,navigator.getUserMedia||navigator.mediaDevices.getUserMedia){var handleStream=function(stream){self.getRawSourceNode=function(){return Pizzicato.context.createMediaStreamSource(stream)},util.isFunction(callback)&&callback()}.bind(self),handleError=function(error){util.isFunction(callback)&&callback(error)};navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({audio:!0}).then(handleStream).catch(handleError):navigator.getUserMedia({audio:!0},handleStream,handleError)}else console.error("Your browser does not support getUserMedia")}.bind(this)(description,callback):"script"===description.source?initializeWithFunction.bind(this)(description.options,callback):"sound"===description.source&&function(options,callback){this.getRawSourceNode=options.sound.getRawSourceNode,options.sound.sourceNode&&Pz.Util.isOscillator(options.sound.sourceNode)&&(this.sourceNode=this.getRawSourceNode(),this.frequency=options.sound.frequency)}.bind(this)(description.options,callback):initializeWithWave.bind(this)({},callback)},Pizzicato.Sound.prototype=Object.create(Pizzicato.Events,{play:{enumerable:!0,value:function(when,offset){this.playing||(Pz.Util.isNumber(offset)||(offset=this.offsetTime||0),Pz.Util.isNumber(when)||(when=0),this.playing=!0,this.paused=!1,this.sourceNode=this.getSourceNode(),this.applyAttack(),Pz.Util.isFunction(this.sourceNode.start)&&(this.lastTimePlayed=Pizzicato.context.currentTime-offset,this.sourceNode.start(Pz.context.currentTime+when,offset)),this.trigger("play"))}},stop:{enumerable:!0,value:function(){(this.paused||this.playing)&&(this.paused=this.playing=!1,this.stopWithRelease(),this.offsetTime=0,this.trigger("stop"))}},pause:{enumerable:!0,value:function(){if(!this.paused&&this.playing){this.paused=!0,this.playing=!1,this.stopWithRelease();var elapsedTime=Pz.context.currentTime-this.lastTimePlayed;this.sourceNode.buffer?this.offsetTime=elapsedTime%(this.sourceNode.buffer.length/Pz.context.sampleRate):this.offsetTime=elapsedTime,this.trigger("pause")}}},clone:{enumerable:!0,value:function(){for(var clone=new Pizzicato.Sound({source:"sound",options:{loop:this.loop,attack:this.attack,release:this.release,volume:this.volume,sound:this}}),i=0;i<this.effects.length;i++)clone.addEffect(this.effects[i]);return clone}},onEnded:{enumerable:!0,value:function(node){return function(){this.sourceNode&&this.sourceNode!==node||(this.playing&&this.stop(),this.paused||this.trigger("end"))}}},addEffect:{enumerable:!0,value:function(effect){if(!Pz.Util.isEffect(effect))return console.error("The object provided is not a Pizzicato effect."),this;this.effects.push(effect);var previousNode=this.effectConnectors.length>0?this.effectConnectors[this.effectConnectors.length-1]:this.fadeNode;previousNode.disconnect(),previousNode.connect(effect);var gain=Pz.context.createGain();return this.effectConnectors.push(gain),effect.connect(gain),gain.connect(this.masterVolume),this}},removeEffect:{enumerable:!0,value:function(effect){var index=this.effects.indexOf(effect);if(-1===index)return console.warn("Cannot remove effect that is not applied to this sound."),this;var shouldResumePlaying=this.playing;shouldResumePlaying&&this.pause();var previousNode=0===index?this.fadeNode:this.effectConnectors[index-1];previousNode.disconnect();var effectConnector=this.effectConnectors[index];effectConnector.disconnect(),effect.disconnect(effectConnector),this.effectConnectors.splice(index,1),this.effects.splice(index,1);var targetNode;return targetNode=index>this.effects.length-1||0===this.effects.length?this.masterVolume:this.effects[index],previousNode.connect(targetNode),shouldResumePlaying&&this.play(),this}},connect:{enumerable:!0,value:function(audioNode){return this.masterVolume.connect(audioNode),this}},disconnect:{enumerable:!0,value:function(audioNode){return this.masterVolume.disconnect(audioNode),this}},connectEffects:{enumerable:!0,value:function(){for(var connectors=[],i=0;i<this.effects.length;i++){var destinationNode=i===this.effects.length-1?this.masterVolume:this.effects[i+1].inputNode;connectors[i]=Pz.context.createGain(),this.effects[i].outputNode.disconnect(this.effectConnectors[i]),this.effects[i].outputNode.connect(destinationNode)}}},volume:{enumerable:!0,get:function(){if(this.masterVolume)return this.masterVolume.gain.value},set:function(volume){Pz.Util.isInRange(volume,0,1)&&this.masterVolume&&(this.masterVolume.gain.value=volume)}},frequency:{enumerable:!0,get:function(){return this.sourceNode&&Pz.Util.isOscillator(this.sourceNode)?this.sourceNode.frequency.value:null},set:function(frequency){this.sourceNode&&Pz.Util.isOscillator(this.sourceNode)&&(this.sourceNode.frequency.value=frequency)}},sustain:{enumerable:!0,get:function(){return console.warn("'sustain' is deprecated. Use 'release' instead."),this.release},set:function(sustain){console.warn("'sustain' is deprecated. Use 'release' instead."),Pz.Util.isInRange(sustain,0,10)&&(this.release=sustain)}},getSourceNode:{enumerable:!0,value:function(){if(this.sourceNode){var previousSourceNode=this.sourceNode;previousSourceNode.gainSuccessor.gain.setValueAtTime(previousSourceNode.gainSuccessor.gain.value,Pz.context.currentTime),previousSourceNode.gainSuccessor.gain.linearRampToValueAtTime(1e-4,Pz.context.currentTime+.2),setTimeout(function(){previousSourceNode.disconnect(),previousSourceNode.gainSuccessor.disconnect()},200)}var sourceNode=this.getRawSourceNode();return sourceNode.gainSuccessor=Pz.context.createGain(),sourceNode.connect(sourceNode.gainSuccessor),sourceNode.gainSuccessor.connect(this.fadeNode),this.fadeNode.connect(this.getInputNode()),Pz.Util.isAudioBufferSourceNode(sourceNode)&&(sourceNode.onended=this.onEnded(sourceNode).bind(this)),sourceNode}},getInputNode:{enumerable:!0,value:function(){return this.effects.length>0?this.effects[0].inputNode:this.masterVolume}},applyAttack:{enumerable:!1,value:function(){this.fadeNode.gain.cancelScheduledValues(Pz.context.currentTime),this.attack?(this.fadeNode.gain.setValueAtTime(0,Pz.context.currentTime),this.fadeNode.gain.linearRampToValueAtTime(1,Pz.context.currentTime+this.attack)):this.fadeNode.gain.setValueAtTime(1,Pizzicato.context.currentTime)}},stopWithRelease:{enumerable:!1,value:function(callback){var node=this.sourceNode,stopSound=function(){return Pz.Util.isFunction(node.stop)?node.stop(0):node.disconnect()},currentValue=this.fadeNode.gain.value;if(this.fadeNode.gain.cancelScheduledValues(Pz.context.currentTime),this.fadeNode.gain.setValueAtTime(currentValue,Pz.context.currentTime),this.release){var remainingReleaseTime=this.fadeNode.gain.value*this.release;this.fadeNode.gain.setValueAtTime(this.fadeNode.gain.value,Pizzicato.context.currentTime),this.fadeNode.gain.linearRampToValueAtTime(1e-5,Pizzicato.context.currentTime+remainingReleaseTime),window.setTimeout(function(){stopSound()},1e3*remainingReleaseTime)}else stopSound()}}}),Pizzicato.Group=function(sounds){sounds=sounds||[],this.mergeGainNode=Pz.context.createGain(),this.masterVolume=Pz.context.createGain(),this.sounds=[],this.effects=[],this.effectConnectors=[],this.mergeGainNode.connect(this.masterVolume),this.masterVolume.connect(Pz.masterGainNode);for(var i=0;i<sounds.length;i++)this.addSound(sounds[i])},Pizzicato.Group.prototype=Object.create(Pz.Events,{connect:{enumerable:!0,value:function(audioNode){return this.masterVolume.connect(audioNode),this}},disconnect:{enumerable:!0,value:function(audioNode){return this.masterVolume.disconnect(audioNode),this}},addSound:{enumerable:!0,value:function(sound){Pz.Util.isSound(sound)?this.sounds.indexOf(sound)>-1?console.warn("The Pizzicato.Sound object was already added to this group"):sound.detached?console.warn("Groups do not support detached sounds. You can manually create an audio graph to group detached sounds together."):(sound.disconnect(Pz.masterGainNode),sound.connect(this.mergeGainNode),this.sounds.push(sound)):console.error("You can only add Pizzicato.Sound objects")}},removeSound:{enumerable:!0,value:function(sound){var index=this.sounds.indexOf(sound);-1!==index?(sound.disconnect(this.mergeGainNode),sound.connect(Pz.masterGainNode),this.sounds.splice(index,1)):console.warn("Cannot remove a sound that is not part of this group.")}},volume:{enumerable:!0,get:function(){if(this.masterVolume)return this.masterVolume.gain.value},set:function(volume){Pz.Util.isInRange(volume,0,1)&&(this.masterVolume.gain.value=volume)}},play:{enumerable:!0,value:function(){for(var i=0;i<this.sounds.length;i++)this.sounds[i].play();this.trigger("play")}},stop:{enumerable:!0,value:function(){for(var i=0;i<this.sounds.length;i++)this.sounds[i].stop();this.trigger("stop")}},pause:{enumerable:!0,value:function(){for(var i=0;i<this.sounds.length;i++)this.sounds[i].pause();this.trigger("pause")}},addEffect:{enumerable:!0,value:function(effect){if(!Pz.Util.isEffect(effect))return console.error("The object provided is not a Pizzicato effect."),this;this.effects.push(effect);var previousNode=this.effectConnectors.length>0?this.effectConnectors[this.effectConnectors.length-1]:this.mergeGainNode;previousNode.disconnect(),previousNode.connect(effect);var gain=Pz.context.createGain();return this.effectConnectors.push(gain),effect.connect(gain),gain.connect(this.masterVolume),this}},removeEffect:{enumerable:!0,value:function(effect){var index=this.effects.indexOf(effect);if(-1===index)return console.warn("Cannot remove effect that is not applied to this group."),this;var previousNode=0===index?this.mergeGainNode:this.effectConnectors(index-1);previousNode.disconnect();var effectConnector=this.effectConnectors[index];effectConnector.disconnect(),effect.disconnect(effectConnector),this.effectConnectors.splice(index,1),this.effects.splice(index,1);var targetNode;return targetNode=index>this.effects.length-1||0===this.effects.length?this.masterVolume:this.effects[index],previousNode.connect(targetNode),this}}}),Pizzicato.Effects={};var baseEffect=Object.create(null,{connect:{enumerable:!0,value:function(audioNode){return this.outputNode.connect(audioNode),this}},disconnect:{enumerable:!0,value:function(audioNode){return this.outputNode.disconnect(audioNode),this}}});Pizzicato.Effects.Delay=function(options){this.options={},options=options||this.options;var defaults={feedback:.5,time:.3,mix:.5};this.inputNode=Pizzicato.context.createGain(),this.outputNode=Pizzicato.context.createGain(),this.dryGainNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.feedbackGainNode=Pizzicato.context.createGain(),this.delayNode=Pizzicato.context.createDelay(),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.delayNode.connect(this.feedbackGainNode),this.feedbackGainNode.connect(this.delayNode),this.inputNode.connect(this.delayNode),this.delayNode.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.Delay.prototype=Object.create(baseEffect,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(time){Pz.Util.isInRange(time,0,180)&&(this.options.time=time,this.delayNode.delayTime.value=time)}},feedback:{enumerable:!0,get:function(){return this.options.feedback},set:function(feedback){Pz.Util.isInRange(feedback,0,1)&&(this.options.feedback=parseFloat(feedback,10),this.feedbackGainNode.gain.value=this.feedback)}}}),Pizzicato.Effects.Compressor=function(options){this.options={},options=options||this.options;var defaults={threshold:-24,knee:30,attack:.003,release:.25,ratio:12};this.inputNode=this.compressorNode=Pizzicato.context.createDynamicsCompressor(),this.outputNode=Pizzicato.context.createGain(),this.compressorNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.Compressor.prototype=Object.create(baseEffect,{threshold:{enumerable:!0,get:function(){return this.compressorNode.threshold.value},set:function(value){Pizzicato.Util.isInRange(value,-100,0)&&(this.compressorNode.threshold.value=value)}},knee:{enumerable:!0,get:function(){return this.compressorNode.knee.value},set:function(value){Pizzicato.Util.isInRange(value,0,40)&&(this.compressorNode.knee.value=value)}},attack:{enumerable:!0,get:function(){return this.compressorNode.attack.value},set:function(value){Pizzicato.Util.isInRange(value,0,1)&&(this.compressorNode.attack.value=value)}},release:{enumerable:!0,get:function(){return this.compressorNode.release.value},set:function(value){Pizzicato.Util.isInRange(value,0,1)&&(this.compressorNode.release.value=value)}},ratio:{enumerable:!0,get:function(){return this.compressorNode.ratio.value},set:function(value){Pizzicato.Util.isInRange(value,1,20)&&(this.compressorNode.ratio.value=value)}},getCurrentGainReduction:function(){return this.compressorNode.reduction}}),Pizzicato.Effects.LowPassFilter=function(options){Filter.call(this,options,"lowpass")},Pizzicato.Effects.HighPassFilter=function(options){Filter.call(this,options,"highpass")};var filterPrototype=Object.create(baseEffect,{frequency:{enumerable:!0,get:function(){return this.filterNode.frequency.value},set:function(value){Pizzicato.Util.isInRange(value,10,22050)&&(this.filterNode.frequency.value=value)}},peak:{enumerable:!0,get:function(){return this.filterNode.Q.value},set:function(value){Pizzicato.Util.isInRange(value,1e-4,1e3)&&(this.filterNode.Q.value=value)}}});Pizzicato.Effects.LowPassFilter.prototype=filterPrototype,Pizzicato.Effects.HighPassFilter.prototype=filterPrototype,Pizzicato.Effects.Distortion=function(options){this.options={},options=options||this.options;var defaults={gain:.5};this.waveShaperNode=Pizzicato.context.createWaveShaper(),this.inputNode=this.outputNode=this.waveShaperNode;for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.Distortion.prototype=Object.create(baseEffect,{gain:{enumerable:!0,get:function(){return this.options.gain},set:function(gain){Pz.Util.isInRange(gain,0,1)&&(this.options.gain=gain,this.adjustGain())}},adjustGain:{writable:!1,configurable:!1,enumerable:!1,value:function(){for(var x,gain=Pz.Util.isNumber(this.options.gain)?parseInt(100*this.options.gain,10):50,curve=new Float32Array(44100),deg=Math.PI/180,i=0;i<44100;++i)x=2*i/44100-1,curve[i]=(3+gain)*x*20*deg/(Math.PI+gain*Math.abs(x));this.waveShaperNode.curve=curve}}}),Pizzicato.Effects.Flanger=function(options){this.options={},options=options||this.options;var defaults={time:.45,speed:.2,depth:.1,feedback:.1,mix:.5};this.inputNode=Pizzicato.context.createGain(),this.outputNode=Pizzicato.context.createGain(),this.inputFeedbackNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.dryGainNode=Pizzicato.context.createGain(),this.delayNode=Pizzicato.context.createDelay(),this.oscillatorNode=Pizzicato.context.createOscillator(),this.gainNode=Pizzicato.context.createGain(),this.feedbackNode=Pizzicato.context.createGain(),this.oscillatorNode.type="sine",this.inputNode.connect(this.inputFeedbackNode),this.inputNode.connect(this.dryGainNode),this.inputFeedbackNode.connect(this.delayNode),this.inputFeedbackNode.connect(this.wetGainNode),this.delayNode.connect(this.wetGainNode),this.delayNode.connect(this.feedbackNode),this.feedbackNode.connect(this.inputFeedbackNode),this.oscillatorNode.connect(this.gainNode),this.gainNode.connect(this.delayNode.delayTime),this.dryGainNode.connect(this.outputNode),this.wetGainNode.connect(this.outputNode),this.oscillatorNode.start(0);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.Flanger.prototype=Object.create(baseEffect,{time:{enumberable:!0,get:function(){return this.options.time},set:function(time){Pz.Util.isInRange(time,0,1)&&(this.options.time=time,this.delayNode.delayTime.value=Pz.Util.normalize(time,.001,.02))}},speed:{enumberable:!0,get:function(){return this.options.speed},set:function(speed){Pz.Util.isInRange(speed,0,1)&&(this.options.speed=speed,this.oscillatorNode.frequency.value=Pz.Util.normalize(speed,.5,5))}},depth:{enumberable:!0,get:function(){return this.options.depth},set:function(depth){Pz.Util.isInRange(depth,0,1)&&(this.options.depth=depth,this.gainNode.gain.value=Pz.Util.normalize(depth,5e-4,.005))}},feedback:{enumberable:!0,get:function(){return this.options.feedback},set:function(feedback){Pz.Util.isInRange(feedback,0,1)&&(this.options.feedback=feedback,this.feedbackNode.gain.value=Pz.Util.normalize(feedback,0,.8))}},mix:{enumberable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}}}),Pizzicato.Effects.StereoPanner=function(options){this.options={},options=options||this.options;var defaults={pan:0};this.inputNode=Pizzicato.context.createGain(),this.outputNode=Pizzicato.context.createGain(),Pizzicato.context.createStereoPanner?(this.pannerNode=Pizzicato.context.createStereoPanner(),this.inputNode.connect(this.pannerNode),this.pannerNode.connect(this.outputNode)):Pizzicato.context.createPanner?(console.warn("Your browser does not support the StereoPannerNode. Will use PannerNode instead."),this.pannerNode=Pizzicato.context.createPanner(),this.pannerNode.type="equalpower",this.inputNode.connect(this.pannerNode),this.pannerNode.connect(this.outputNode)):(console.warn("Your browser does not support the Panner effect."),this.inputNode.connect(this.outputNode));for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.StereoPanner.prototype=Object.create(baseEffect,{pan:{enumerable:!0,get:function(){return this.options.pan},set:function(pan){if(Pz.Util.isInRange(pan,-1,1)&&(this.options.pan=pan,this.pannerNode)){this.pannerNode.toString().indexOf("StereoPannerNode")>-1?this.pannerNode.pan.value=pan:this.pannerNode.setPosition(pan,0,1-Math.abs(pan))}}}}),Pizzicato.Effects.Convolver=function(options,callback){this.options={},options=options||this.options;var self=this,request=new XMLHttpRequest,defaults={mix:.5};this.callback=callback,this.inputNode=Pizzicato.context.createGain(),this.convolverNode=Pizzicato.context.createConvolver(),this.outputNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.dryGainNode=Pizzicato.context.createGain(),this.inputNode.connect(this.convolverNode),this.convolverNode.connect(this.wetGainNode),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.wetGainNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key];options.impulse?(request.open("GET",options.impulse,!0),request.responseType="arraybuffer",request.onload=function(e){var audioData=e.target.response;Pizzicato.context.decodeAudioData(audioData,function(buffer){self.convolverNode.buffer=buffer,self.callback&&Pz.Util.isFunction(self.callback)&&self.callback()},function(error){error=error||new Error("Error decoding impulse file"),self.callback&&Pz.Util.isFunction(self.callback)&&self.callback(error)})},request.onreadystatechange=function(event){4===request.readyState&&200!==request.status&&console.error("Error while fetching "+options.impulse+". "+request.statusText)},request.send()):console.error("No impulse file specified.")},Pizzicato.Effects.Convolver.prototype=Object.create(baseEffect,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}}}),Pizzicato.Effects.PingPongDelay=function(options){this.options={},options=options||this.options;var defaults={feedback:.5,time:.3,mix:.5};this.inputNode=Pizzicato.context.createGain(),this.outputNode=Pizzicato.context.createGain(),this.delayNodeLeft=Pizzicato.context.createDelay(),this.delayNodeRight=Pizzicato.context.createDelay(),this.dryGainNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.feedbackGainNode=Pizzicato.context.createGain(),this.channelMerger=Pizzicato.context.createChannelMerger(2),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.delayNodeLeft.connect(this.channelMerger,0,0),this.delayNodeRight.connect(this.channelMerger,0,1),this.delayNodeLeft.connect(this.delayNodeRight),this.feedbackGainNode.connect(this.delayNodeLeft),this.delayNodeRight.connect(this.feedbackGainNode),this.inputNode.connect(this.feedbackGainNode),this.channelMerger.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.PingPongDelay.prototype=Object.create(baseEffect,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(time){Pz.Util.isInRange(time,0,180)&&(this.options.time=time,this.delayNodeLeft.delayTime.value=time,this.delayNodeRight.delayTime.value=time)}},feedback:{enumerable:!0,get:function(){return this.options.feedback},set:function(feedback){Pz.Util.isInRange(feedback,0,1)&&(this.options.feedback=parseFloat(feedback,10),this.feedbackGainNode.gain.value=this.feedback)}}}),Pizzicato.Effects.Reverb=function(options){this.options={},options=options||this.options;var defaults={mix:.5,time:.01,decay:.01,reverse:!1};this.inputNode=Pizzicato.context.createGain(),this.reverbNode=Pizzicato.context.createConvolver(),this.outputNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.dryGainNode=Pizzicato.context.createGain(),this.inputNode.connect(this.reverbNode),this.reverbNode.connect(this.wetGainNode),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.wetGainNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key];buildImpulse.bind(this)()},Pizzicato.Effects.Reverb.prototype=Object.create(baseEffect,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(time){Pz.Util.isInRange(time,1e-4,10)&&(this.options.time=time,buildImpulse.bind(this)())}},decay:{enumerable:!0,get:function(){return this.options.decay},set:function(decay){Pz.Util.isInRange(decay,1e-4,10)&&(this.options.decay=decay,buildImpulse.bind(this)())}},reverse:{enumerable:!0,get:function(){return this.options.reverse},set:function(reverse){Pz.Util.isBool(reverse)&&(this.options.reverse=reverse,buildImpulse.bind(this)())}}}),Pizzicato.Effects.Tremolo=function(options){this.options={},options=options||this.options;var defaults={speed:4,depth:1,mix:.8};this.inputNode=Pizzicato.context.createGain(),this.outputNode=Pizzicato.context.createGain(),this.dryGainNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.tremoloGainNode=Pizzicato.context.createGain(),this.tremoloGainNode.gain.value=0,this.lfoNode=Pizzicato.context.createOscillator(),this.shaperNode=Pizzicato.context.createWaveShaper(),this.shaperNode.curve=new Float32Array([0,1]),this.shaperNode.connect(this.tremoloGainNode.gain),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.lfoNode.connect(this.shaperNode),this.lfoNode.type="sine",this.lfoNode.start(0),this.inputNode.connect(this.tremoloGainNode),this.tremoloGainNode.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.Tremolo.prototype=Object.create(baseEffect,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}},speed:{enumerable:!0,get:function(){return this.options.speed},set:function(speed){Pz.Util.isInRange(speed,0,20)&&(this.options.speed=speed,this.lfoNode.frequency.value=speed)}},depth:{enumerable:!0,get:function(){return this.options.depth},set:function(depth){Pz.Util.isInRange(depth,0,1)&&(this.options.depth=depth,this.shaperNode.curve=new Float32Array([1-depth,1]))}}}),Pizzicato.Effects.DubDelay=function(options){this.options={},options=options||this.options;var defaults={feedback:.6,time:.7,mix:.5,cutoff:700};this.inputNode=Pizzicato.context.createGain(),this.outputNode=Pizzicato.context.createGain(),this.dryGainNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.feedbackGainNode=Pizzicato.context.createGain(),this.delayNode=Pizzicato.context.createDelay(),this.bqFilterNode=Pizzicato.context.createBiquadFilter(),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.inputNode.connect(this.wetGainNode),this.inputNode.connect(this.feedbackGainNode),this.feedbackGainNode.connect(this.bqFilterNode),this.bqFilterNode.connect(this.delayNode),this.delayNode.connect(this.feedbackGainNode),this.delayNode.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.DubDelay.prototype=Object.create(baseEffect,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(time){Pz.Util.isInRange(time,0,180)&&(this.options.time=time,this.delayNode.delayTime.value=time)}},feedback:{enumerable:!0,get:function(){return this.options.feedback},set:function(feedback){Pz.Util.isInRange(feedback,0,1)&&(this.options.feedback=parseFloat(feedback,10),this.feedbackGainNode.gain.value=this.feedback)}},cutoff:{enumerable:!0,get:function(){return this.options.cutoff},set:function(cutoff){Pz.Util.isInRange(cutoff,0,4e3)&&(this.options.cutoff=cutoff,this.bqFilterNode.frequency.value=this.cutoff)}}}),Pizzicato.Effects.RingModulator=function(options){this.options={},options=options||this.options;var defaults={speed:30,distortion:1,mix:.5};this.inputNode=Pizzicato.context.createGain(),this.outputNode=Pizzicato.context.createGain(),this.dryGainNode=Pizzicato.context.createGain(),this.wetGainNode=Pizzicato.context.createGain(),this.vIn=Pizzicato.context.createOscillator(),this.vIn.start(0),this.vInGain=Pizzicato.context.createGain(),this.vInGain.gain.value=.5,this.vInInverter1=Pizzicato.context.createGain(),this.vInInverter1.gain.value=-1,this.vInInverter2=Pizzicato.context.createGain(),this.vInInverter2.gain.value=-1,this.vInDiode1=new DiodeNode(Pizzicato.context),this.vInDiode2=new DiodeNode(Pizzicato.context),this.vInInverter3=Pizzicato.context.createGain(),this.vInInverter3.gain.value=-1,this.vcInverter1=Pizzicato.context.createGain(),this.vcInverter1.gain.value=-1,this.vcDiode3=new DiodeNode(Pizzicato.context),this.vcDiode4=new DiodeNode(Pizzicato.context),this.outGain=Pizzicato.context.createGain(),this.outGain.gain.value=3,this.compressor=Pizzicato.context.createDynamicsCompressor(),this.compressor.threshold.value=-24,this.compressor.ratio.value=16,this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.inputNode.connect(this.vcInverter1),this.inputNode.connect(this.vcDiode4.node),this.vcInverter1.connect(this.vcDiode3.node),this.vIn.connect(this.vInGain),this.vInGain.connect(this.vInInverter1),this.vInGain.connect(this.vcInverter1),this.vInGain.connect(this.vcDiode4.node),this.vInInverter1.connect(this.vInInverter2),this.vInInverter1.connect(this.vInDiode2.node),this.vInInverter2.connect(this.vInDiode1.node),this.vInDiode1.connect(this.vInInverter3),this.vInDiode2.connect(this.vInInverter3),this.vInInverter3.connect(this.compressor),this.vcDiode3.connect(this.compressor),this.vcDiode4.connect(this.compressor),this.compressor.connect(this.outGain),this.outGain.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]};var DiodeNode=function(context_){this.context=context_,this.node=this.context.createWaveShaper(),this.vb=.2,this.vl=.4,this.h=1,this.setCurve()};return DiodeNode.prototype.setDistortion=function(distortion){return this.h=distortion,this.setCurve()},DiodeNode.prototype.setCurve=function(){var i,v,value,wsCurve,_i,_ref;for(1024,i=_i=0,_ref=(wsCurve=new Float32Array(1024)).length;0<=_ref?_i<_ref:_i>_ref;i=0<=_ref?++_i:--_i)v=(i-512)/512,value=(v=Math.abs(v))<=this.vb?0:this.vb<v&&v<=this.vl?this.h*(Math.pow(v-this.vb,2)/(2*this.vl-2*this.vb)):this.h*v-this.h*this.vl+this.h*(Math.pow(this.vl-this.vb,2)/(2*this.vl-2*this.vb)),wsCurve[i]=value;return this.node.curve=wsCurve},DiodeNode.prototype.connect=function(destination){return this.node.connect(destination)},Pizzicato.Effects.RingModulator.prototype=Object.create(baseEffect,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(mix){Pz.Util.isInRange(mix,0,1)&&(this.options.mix=mix,this.dryGainNode.gain.value=Pizzicato.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=Pizzicato.Util.getWetLevel(this.mix))}},speed:{enumerable:!0,get:function(){return this.options.speed},set:function(speed){Pz.Util.isInRange(speed,0,2e3)&&(this.options.speed=speed,this.vIn.frequency.value=speed)}},distortion:{enumerable:!0,get:function(){return this.options.distortion},set:function(distortion){if(Pz.Util.isInRange(distortion,.2,50)){this.options.distortion=parseFloat(distortion,10);for(var diodeNodes=[this.vInDiode1,this.vInDiode2,this.vcDiode3,this.vcDiode4],i=0,l=diodeNodes.length;i<l;i++)diodeNodes[i].setDistortion(distortion)}}}}),Pizzicato.Effects.Quadrafuzz=function(options){this.options={},options=options||this.options;var defaults={lowGain:.6,midLowGain:.8,midHighGain:.5,highGain:.6};this.inputNode=Pz.context.createGain(),this.outputNode=Pz.context.createGain(),this.dryGainNode=Pz.context.createGain(),this.wetGainNode=Pz.context.createGain(),this.lowpassLeft=Pz.context.createBiquadFilter(),this.lowpassLeft.type="lowpass",this.lowpassLeft.frequency.value=147,this.lowpassLeft.Q.value=.7071,this.bandpass1Left=Pz.context.createBiquadFilter(),this.bandpass1Left.type="bandpass",this.bandpass1Left.frequency.value=587,this.bandpass1Left.Q.value=.7071,this.bandpass2Left=Pz.context.createBiquadFilter(),this.bandpass2Left.type="bandpass",this.bandpass2Left.frequency.value=2490,this.bandpass2Left.Q.value=.7071,this.highpassLeft=Pz.context.createBiquadFilter(),this.highpassLeft.type="highpass",this.highpassLeft.frequency.value=4980,this.highpassLeft.Q.value=.7071,this.overdrives=[];for(var i=0;i<4;i++)this.overdrives[i]=Pz.context.createWaveShaper(),this.overdrives[i].curve=getDistortionCurve();this.inputNode.connect(this.wetGainNode),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode);var filters=[this.lowpassLeft,this.bandpass1Left,this.bandpass2Left,this.highpassLeft];for(i=0;i<filters.length;i++)this.wetGainNode.connect(filters[i]),filters[i].connect(this.overdrives[i]),this.overdrives[i].connect(this.outputNode);for(var key in defaults)this[key]=options[key],this[key]=void 0===this[key]||null===this[key]?defaults[key]:this[key]},Pizzicato.Effects.Quadrafuzz.prototype=Object.create(baseEffect,{lowGain:{enumerable:!0,get:function(){return this.options.lowGain},set:function(lowGain){Pz.Util.isInRange(lowGain,0,1)&&(this.options.lowGain=lowGain,this.overdrives[0].curve=getDistortionCurve(Pz.Util.normalize(this.lowGain,0,150)))}},midLowGain:{enumerable:!0,get:function(){return this.options.midLowGain},set:function(midLowGain){Pz.Util.isInRange(midLowGain,0,1)&&(this.options.midLowGain=midLowGain,this.overdrives[1].curve=getDistortionCurve(Pz.Util.normalize(this.midLowGain,0,150)))}},midHighGain:{enumerable:!0,get:function(){return this.options.midHighGain},set:function(midHighGain){Pz.Util.isInRange(midHighGain,0,1)&&(this.options.midHighGain=midHighGain,this.overdrives[2].curve=getDistortionCurve(Pz.Util.normalize(this.midHighGain,0,150)))}},highGain:{enumerable:!0,get:function(){return this.options.highGain},set:function(highGain){Pz.Util.isInRange(highGain,0,1)&&(this.options.highGain=highGain,this.overdrives[3].curve=getDistortionCurve(Pz.Util.normalize(this.highGain,0,150)))}}}),Pizzicato}console.error("No AudioContext found in this environment. Please ensure your window or global object contains a working AudioContext constructor function.")}("undefined"!=typeof window?window:global);
